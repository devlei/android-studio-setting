<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1703660899411" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="260" />
    <option name="newTranslationDialogWidth" value="586" />
    <option name="newTranslationDialogX" value="742" />
    <option name="newTranslationDialogY" value="441" />
    <histories>
      <item value="整合依赖&#10;" />
      <item value="整合" />
      <item value="zh" />
      <item value="提取共用 dependencies 到 common library" />
      <item value="提取共用 dependencies 到 common libr" />
      <item value="提取共用 dependencies 到 common li'b" />
      <item value="提取共用 dependencies 到 common" />
      <item value="提取共用 dependencies 到comm" />
      <item value="提取共用 dependencies 到com" />
      <item value="提取共用 dependencies 到" />
      <item value="提取共用 dependencies" />
      <item value="提取共用 depend" />
      <item value="提取共用 depen" />
      <item value="提取共用 de" />
      <item value="提取共用 " />
      <item value="提取共用 implementation" />
      <item value="提取共用 implementta" />
      <item value="提取共用 implement" />
      <item value="提取共用imple" />
      <item value="提取共用" />
      <item value="提取gong'yong" />
      <item value="提取公用" />
      <item value="提取" />
      <item value="ti" />
      <item value="fix" />
      <item value="使用 moshi 解决 gson 对于 kotlin 的默认值问题" />
      <item value="使用 moshi 解决 gson 对于 kotlin 的mo'ren'z" />
      <item value="使用 moshi 解决 gson 对于" />
      <item value="使用 moshi 解决" />
      <item value="sh" />
      <item value="用 moshi 替代 gson" />
      <item value="用 moshi 替代g" />
      <item value="用" />
      <item value="替代" />
      <item value="Unsupported Operation Exception" />
      <item value="Use JsonReader.setLenient(true) to accept malformed JSON at path" />
      <item value="interact Mode" />
      <item value="ch" />
      <item value="Returns the name of this enum constant, exactly as declared in its enum declaration." />
      <item value="annotation" />
      <item value="annotationes" />
      <item value="annotations" />
      <item value="annotation&#10;" />
      <item value="Returns the value of the next token, consuming it. The result may be a string, number, boolean, null, map, or list, according to the JSON structure. Throws: JsonDataException – if the next token is not a literal value, if a JSON object has a duplicate key. See Also: JsonWriter.jsonValue(Object)" />
      <item value="Encodes the value which may be a string, number, boolean, null, map, or list. Returns: this writer. See Also: JsonReader.readJsonValue()" />
      <item value="map Layer Json" />
      <item value="一层" />
      <item value="yi" />
      <item value="maps Json" />
      <item value="multi Map Json" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="105" />
        <entry key="ENGLISH" value="105" />
        <entry key="HAWAIIAN" value="1" />
      </map>
    </option>
  </component>
</application>